import { useState, useCallback } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useSession } from "next-auth/react";

import { Navigation } from "../../components/Navigation";
import { Badge } from "../../components/Badge";
import { ExerciseSelector } from "../../components/ExerciseSelector";
import { api } from "../../utils/api";

const Dashboard: NextPage = () => {
  const { data: sessionData } = useSession();
  const [date, setDate] = useState(new Date().toISOString().split("T")[0]);
  const [selectedExerciseId, selectExerciseId] = useState(-1);
  const [weight, setWeight] = useState(50);
  const [reps, setReps] = useState(10);
  const [sets, setSets] = useState(3);
  const [note, setNote] = useState("");

  const mutation = api.workout.add.useMutation();
  const send = () => {
    mutation.mutate({
      userId: sessionData?.user?.id,
      date: new Date(date).toISOString(),
      weight: parseFloat(weight),
      reps: parseInt(reps),
      sets: parseInt(sets),
      note: note,
      exerciseId: selectedExerciseId,
    });
  };
  const handleExerciseClick = useCallback((exerciseId) => {
    selectExerciseId(exerciseId);
  });
  return (
    <>
      <Head>
        <title>EveryWorkout</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Navigation />

        <div className="mb-2">
          <label
            className="mb-2 block text-sm font-bold text-gray-700"
            for="date"
          >
            日付
          </label>
          <input
            className="focus:shadow-outline w-full appearance-none rounded border py-2 px-3 leading-tight text-gray-700 shadow focus:outline-none"
            id="date"
            type="date"
            placeholder="日付"
            value={date}
            onChange={(e) => setDate(e.target.value)}
          />
        </div>
        <div className="mb-2">
          <label className="mb-2 block text-sm font-bold text-gray-700">
            種目
          </label>
          <ExerciseSelector
            selectedExerciseId={selectedExerciseId}
            handleExerciseClick={handleExerciseClick}
          />
        </div>
        <div class="mb-2">
          <label
            class="mb-2 block text-sm font-bold text-gray-700"
            for="weight"
          >
            重量
          </label>
          <input
            class="focus:shadow-outline w-full appearance-none rounded border py-2 px-3 leading-tight text-gray-700 shadow focus:outline-none"
            id="weight"
            type="number"
            step="2.5"
            placeholder="重量"
            value={weight}
            onChange={(e) => setWeight(e.target.value)}
          />
        </div>
        <div class="mb-2">
          <label class="mb-2 block text-sm font-bold text-gray-700" for="reps">
            rep数
          </label>
          <input
            class="focus:shadow-outline w-full appearance-none rounded border py-2 px-3 leading-tight text-gray-700 shadow focus:outline-none"
            id="reps"
            type="number"
            placeholder="rep数"
            value={reps}
            onChange={(e) => setReps(e.target.value)}
          />
        </div>
        <div class="mb-2">
          <label class="mb-2 block text-sm font-bold text-gray-700" for="sets">
            セット数
          </label>
          <input
            class="focus:shadow-outline w-full appearance-none rounded border py-2 px-3 leading-tight text-gray-700 shadow focus:outline-none"
            id="sets"
            type="number"
            placeholder="セット数"
            value={sets}
            onChange={(e) => setSets(e.target.value)}
          />
        </div>
        <div class="mb-2">
          <label
            class="mb-2 block text-sm font-bold text-gray-700"
            for="username"
          >
            メモ
          </label>
          <input
            class="focus:shadow-outline w-full appearance-none rounded border py-2 px-3 leading-tight text-gray-700 shadow focus:outline-none"
            id="note"
            type="text"
            placeholder="メモ"
            value={note}
            onChange={(e) => setNote(e.target.value)}
          />
        </div>
        <button onClick={send}>SEND</button>
      </main>
    </>
  );
};

export default Dashboard;
