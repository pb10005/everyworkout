import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { api } from "../utils/api";

import { Navigation, Loading, MaximumCard, RecordCard } from "../components";

const Dashboard: NextPage = () => {
  const {
    isLoading: loadingW,
    isSuccess: successW,
    data,
  } = api.workout.getUserWorkouts.useQuery({
    limit: 3,
  });
  const {
    isLoading: loadingM,
    isSuccess: successM,
    data: maximum,
  } = api.maximum.getUserMaximums.useQuery();

  return (
    <>
      <Head>
        <title>EveryWorkout</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navigation />
      <div className="grid md:grid-cols-12">
        <div className="md:col-span-6 md:col-start-4">
          <section className="mb-2 p-2">
            <p className="text-sm text-gray-500">自己ベスト</p>
            {loadingM && <Loading />}
            {successM && (
              <section className="grid md:grid-cols-3">
                {maximum?.length && maximum?.length > 0
                  ? maximum?.map((m) => {
                      return (
                        <div
                          key={`${m.exerciseId}${m.metrics_code}`}
                          className="md:grid-span-1 px-1 md:mb-1"
                        >
                          <Link href={`/maximum/${m.exerciseId}`}>
                            <MaximumCard
                              exerciseName={m.exercise?.name}
                              metrics_code={m.metrics_code}
                              value={m.value}
                            />
                          </Link>
                        </div>
                      );
                    })
                  : "No data"}
              </section>
            )}
          </section>
          <section className="mb-2 p-2">
            <p className="text-sm text-gray-500">トレーニング履歴</p>
            {loadingW && <Loading />}
            {successW && (
              <div>
                {data?.length && data?.length > 0 ? (
                  <>
                    {data?.map((d) => {
                      return <RecordCard key={d.id} workout={d} />;
                    })}
                    <Link href="/workout/history">View More</Link>
                  </>
                ) : (
                  "No data"
                )}
              </div>
            )}
          </section>
        </div>
      </div>
    </>
  );
};

export default Dashboard;
