import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import { api } from "../../utils/api";
import { MinusCircleIcon } from "@heroicons/react/20/solid";

import { ResponsiveContainer, LineChart, XAxis, YAxis, Line, CartesianGrid } from "recharts";
import { Heading, Navigation, MaximumCard, Loading, Button } from "../../components";

const History: NextPage = () => {
  const router = useRouter();
  const { exerciseId: ids } = router.query;
  const exerciseId = (Array.isArray(ids) ? ids[0] : ids) || "-1";
  const [isDeleteMode, setDeleteMode] = useState<boolean>(false);

  const { data, isLoading, isSuccess } =
    api.maximum.getUserMaximumsByExerciseId.useQuery({
      exerciseId: parseInt(exerciseId),
    });

  const lineData = data?.map(x => {
    return {
      date: x.date.getTime(),
      value: x.value
    }
  });

  const mutation = api.maximum.delete.useMutation();

  const toggleDeleteMode = () => {
    setDeleteMode(!isDeleteMode);
  };

  const deleteMaximum = async (id: string) => {
    await mutation.mutateAsync({
      id
    });
  };

  return (
    <>
      <Head>
        <title>EveryWorkout</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Heading />
      <Navigation />
      <div className="grid md:grid-cols-12 bg-gray-50">
        <div className="md:col-span-6 md:col-start-4">
          <section className="mb-2 p-2">
            {mutation.isLoading && <Loading />}
            {mutation.isSuccess && (
              <>
                <p className="rounded-lg bg-green-100 p-4 text-green-900">
                  削除完了
                </p>
              </>
            )}
            <p className="text-sm text-gray-500">ベスト更新履歴</p>
            {isLoading && <Loading />}
            {isSuccess && (<>
              <div className="w-full">
                <ResponsiveContainer
                  width="100%"
                  height={300}>
                  <LineChart
                    data={lineData} >
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis
                      dataKey="date"
                      domain={['dataMin', 'dataMax']}
                      tickFormatter={(unixTime: Date) => new Date(unixTime).toLocaleDateString()}
                      type='number' />
                    <YAxis />
                    <Line type="monotone" dataKey="value" />
                  </LineChart>
                </ResponsiveContainer>
              </div>
              <div className="mb-2 md:grid-span-3">
                <Button onClick={toggleDeleteMode}>削除モード</Button>
              </div>
              <section className="grid md:grid-cols-3 gap-1">
                {data?.length && data?.length > 0
                  ? data?.map((d) => {
                    return (
                      <div key={d.id} className="md:grid-span-1 flex items-center">
                        {isDeleteMode ?
                          <MinusCircleIcon className="w-6 h-6 text-red-900 cursor-pointer" onClick={() => void deleteMaximum(d.id)}></MinusCircleIcon>
                          : ""}
                        <MaximumCard
                          date={d.date}
                          exerciseName={d.exercise.name}
                          metrics_code={d.metrics_code}
                          value={d.value}
                        />
                      </div>
                    );
                  })
                  : "No data"}
              </section></>
            )}
          </section>
        </div >
      </div >
    </>
  );
};

export default History;
